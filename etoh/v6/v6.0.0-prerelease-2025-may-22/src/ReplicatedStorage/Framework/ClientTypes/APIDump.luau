-- API instance property dump as of 09/05/25 (DD/MM/YY)
-- (trimmed, only includes properties that can be overwritten)

export type Object={}
export type Instance=Object&{Archivable:boolean?,Name:string?,Parent:Instance?,Sandboxed:boolean?,}
export type AccessoryDescription=Instance&{AccessoryType:Enum.AccessoryType?,AssetId:number?,Instance:Instance?,IsLayered:boolean?,Order:number?,Position:Vector3?,Puffiness:number?,Rotation:Vector3?,Scale:Vector3?,}
export type Accoutrement=Instance&{AttachmentForward:Vector3?,AttachmentPoint:CFrame?,AttachmentPos:Vector3?,AttachmentRight:Vector3?,AttachmentUp:Vector3?,}
export type Accessory=Accoutrement&{AccessoryType:Enum.AccessoryType?,}
export type AdPortal=Instance&{}
export type AdvancedDragger=Instance&{}
export type Animation=Instance&{AnimationId:string?,}
export type AnimationClip=Instance&{Loop:boolean?,Priority:Enum.AnimationPriority?,}
export type CurveAnimation=AnimationClip&{}
export type KeyframeSequence=AnimationClip&{}
export type AnimationController=Instance&{}
export type AnimationRigData=Instance&{}
export type Animator=Instance&{PreferLodEnabled:boolean?,}
export type Annotation=Instance&{}
export type WorkspaceAnnotation=Annotation&{}
export type Atmosphere=Instance&{Color:Color3?,Decay:Color3?,Density:number?,Glare:number?,Haze:number?,Offset:number?,}
export type Attachment=Instance&{Axis:Vector3?,CFrame:CFrame?,Orientation:Vector3?,Position:Vector3?,SecondaryAxis:Vector3?,Visible:boolean?,WorldAxis:Vector3?,WorldCFrame:CFrame?,WorldOrientation:Vector3?,WorldPosition:Vector3?,WorldSecondaryAxis:Vector3?,}
export type Bone=Attachment&{Transform:CFrame?,}
export type AudioAnalyzer=Instance&{SpectrumEnabled:boolean?,WindowSize:Enum.AudioWindowSize?,}
export type AudioChannelMixer=Instance&{Layout:Enum.AudioChannelLayout?,}
export type AudioChannelSplitter=Instance&{Layout:Enum.AudioChannelLayout?,}
export type AudioChorus=Instance&{Bypass:boolean?,Depth:number?,Mix:number?,Rate:number?,}
export type AudioCompressor=Instance&{Attack:number?,Bypass:boolean?,MakeupGain:number?,Ratio:number?,Release:number?,Threshold:number?,}
export type AudioDeviceInput=Instance&{AccessType:Enum.AccessModifierType?,Muted:boolean?,Player:Player?,Volume:number?,}
export type AudioDeviceOutput=Instance&{Player:Player?,}
export type AudioDistortion=Instance&{Bypass:boolean?,Level:number?,}
export type AudioEcho=Instance&{Bypass:boolean?,DelayTime:number?,DryLevel:number?,Feedback:number?,RampTime:number?,WetLevel:number?,}
export type AudioEmitter=Instance&{AudioInteractionGroup:string?,SimulationFidelity:Enum.AudioSimulationFidelity?,}
export type AudioEqualizer=Instance&{Bypass:boolean?,HighGain:number?,LowGain:number?,MidGain:number?,MidRange:NumberRange?,}
export type AudioFader=Instance&{Bypass:boolean?,Volume:number?,}
export type AudioFilter=Instance&{Bypass:boolean?,FilterType:Enum.AudioFilterType?,Frequency:number?,Gain:number?,Q:number?,}
export type AudioFlanger=Instance&{Bypass:boolean?,Depth:number?,Mix:number?,Rate:number?,}
export type AudioLimiter=Instance&{Bypass:boolean?,MaxLevel:number?,Release:number?,}
export type AudioListener=Instance&{AudioInteractionGroup:string?,SimulationFidelity:Enum.AudioSimulationFidelity?,}
export type AudioPitchShifter=Instance&{Bypass:boolean?,Pitch:number?,WindowSize:Enum.AudioWindowSize?,}
export type AudioPlayer=Instance&{Asset:string?,AutoLoad:boolean?,LoopRegion:NumberRange?,Looping:boolean?,PlaybackRegion:NumberRange?,PlaybackSpeed:number?,TimePosition:number?,Volume:number?,}
export type AudioRecorder=Instance&{}
export type AudioReverb=Instance&{Bypass:boolean?,DecayRatio:number?,DecayTime:number?,Density:number?,Diffusion:number?,DryLevel:number?,EarlyDelayTime:number?,HighCutFrequency:number?,LateDelayTime:number?,LowShelfFrequency:number?,LowShelfGain:number?,ReferenceFrequency:number?,WetLevel:number?,}
export type AudioSearchParams=Instance&{Album:string?,Artist:string?,AudioSubType:Enum.AudioSubType?,MaxDuration:number?,MinDuration:number?,SearchKeyword:string?,Tag:string?,Title:string?,}
export type AudioTextToSpeech=Instance&{Looping:boolean?,Pitch:number?,PlaybackSpeed:number?,Speed:number?,Text:string?,TimePosition:number?,VoiceId:string?,Volume:number?,}
export type AvatarAccessoryRules=Instance&{}
export type AvatarAnimationRules=Instance&{}
export type AvatarBodyRules=Instance&{}
export type AvatarClothingRules=Instance&{}
export type AvatarCollisionRules=Instance&{}
export type AvatarRules=Instance&{}
export type Backpack=Instance&{}
export type BaseRemoteEvent=Instance&{}
export type RemoteEvent=BaseRemoteEvent&{}
export type UnreliableRemoteEvent=BaseRemoteEvent&{}
export type BaseWrap=Instance&{}
export type WrapDeformer=BaseWrap&{}
export type WrapLayer=BaseWrap&{AutoSkin:Enum.WrapLayerAutoSkin?,Enabled:boolean?,Order:number?,Puffiness:number?,}
export type WrapTarget=BaseWrap&{}
export type Beam=Instance&{Attachment0:Attachment?,Attachment1:Attachment?,Brightness:number?,Color:ColorSequence?,CurveSize0:number?,CurveSize1:number?,Enabled:boolean?,FaceCamera:boolean?,LightEmission:number?,LightInfluence:number?,LocalTransparencyModifier:number?,Segments:number?,Texture:string?,TextureLength:number?,TextureMode:Enum.TextureMode?,TextureSpeed:number?,Transparency:NumberSequence?,Width0:number?,Width1:number?,ZOffset:number?,}
export type BindableEvent=Instance&{}
export type BindableFunction=Instance&{}
export type BodyPartDescription=Instance&{AssetId:number?,BodyPart:Enum.BodyPart?,Color:Color3?,Instance:Instance?,}
export type Breakpoint=Instance&{}
export type CharacterAppearance=Instance&{}
export type BodyColors=CharacterAppearance&{HeadColor:BrickColor?,HeadColor3:Color3?,LeftArmColor:BrickColor?,LeftArmColor3:Color3?,LeftLegColor:BrickColor?,LeftLegColor3:Color3?,RightArmColor:BrickColor?,RightArmColor3:Color3?,RightLegColor:BrickColor?,RightLegColor3:Color3?,TorsoColor:BrickColor?,TorsoColor3:Color3?,}
export type CharacterMesh=CharacterAppearance&{BaseTextureId:number?,BodyPart:Enum.BodyPart?,MeshId:number?,OverlayTextureId:number?,}
export type Clothing=CharacterAppearance&{Color3:Color3?,}
export type Pants=Clothing&{PantsTemplate:string?,}
export type Shirt=Clothing&{ShirtTemplate:string?,}
export type ShirtGraphic=CharacterAppearance&{Color3:Color3?,Graphic:string?,}
export type ClickDetector=Instance&{CursorIcon:string?,MaxActivationDistance:number?,}
export type DragDetector=ClickDetector&{ActivatedCursorIcon:string?,ApplyAtCenterOfMass:boolean?,Axis:Vector3?,DragFrame:CFrame?,DragStyle:Enum.DragDetectorDragStyle?,Enabled:boolean?,GamepadModeSwitchKeyCode:Enum.KeyCode?,KeyboardModeSwitchKeyCode:Enum.KeyCode?,MaxDragAngle:number?,MaxDragTranslation:Vector3?,MaxForce:number?,MaxTorque:number?,MinDragAngle:number?,MinDragTranslation:Vector3?,Orientation:Vector3?,PermissionPolicy:Enum.DragDetectorPermissionPolicy?,ReferenceInstance:Instance?,ResponseStyle:Enum.DragDetectorResponseStyle?,Responsiveness:number?,RunLocally:boolean?,SecondaryAxis:Vector3?,TrackballRadialPullFactor:number?,TrackballRollFactor:number?,VRSwitchKeyCode:Enum.KeyCode?,WorldAxis:Vector3?,WorldSecondaryAxis:Vector3?,}
export type Clouds=Instance&{Color:Color3?,Cover:number?,Density:number?,Enabled:boolean?,}
export type Configuration=Instance&{}
export type Constraint=Instance&{Attachment0:Attachment?,Attachment1:Attachment?,Color:BrickColor?,Enabled:boolean?,Visible:boolean?,}
export type AlignOrientation=Constraint&{AlignType:Enum.AlignType?,CFrame:CFrame?,LookAtPosition:Vector3?,MaxAngularVelocity:number?,MaxTorque:number?,Mode:Enum.OrientationAlignmentMode?,PrimaryAxis:Vector3?,PrimaryAxisOnly:boolean?,ReactionTorqueEnabled:boolean?,Responsiveness:number?,RigidityEnabled:boolean?,SecondaryAxis:Vector3?,}
export type AlignPosition=Constraint&{ApplyAtCenterOfMass:boolean?,ForceLimitMode:Enum.ForceLimitMode?,ForceRelativeTo:Enum.ActuatorRelativeTo?,MaxAxesForce:Vector3?,MaxForce:number?,MaxVelocity:number?,Mode:Enum.PositionAlignmentMode?,Position:Vector3?,ReactionForceEnabled:boolean?,Responsiveness:number?,RigidityEnabled:boolean?,}
export type AngularVelocity=Constraint&{AngularVelocity:Vector3?,MaxTorque:number?,ReactionTorqueEnabled:boolean?,RelativeTo:Enum.ActuatorRelativeTo?,}
export type AnimationConstraint=Constraint&{IsKinematic:boolean?,MaxForce:number?,MaxTorque:number?,Transform:CFrame?,}
export type BallSocketConstraint=Constraint&{LimitsEnabled:boolean?,MaxFrictionTorque:number?,Radius:number?,Restitution:number?,TwistLimitsEnabled:boolean?,TwistLowerAngle:number?,TwistUpperAngle:number?,UpperAngle:number?,}
export type HingeConstraint=Constraint&{ActuatorType:Enum.ActuatorType?,AngularResponsiveness:number?,AngularSpeed:number?,AngularVelocity:number?,LimitsEnabled:boolean?,LowerAngle:number?,MotorMaxAcceleration:number?,MotorMaxTorque:number?,Radius:number?,Restitution:number?,ServoMaxTorque:number?,TargetAngle:number?,UpperAngle:number?,}
export type LineForce=Constraint&{ApplyAtCenterOfMass:boolean?,InverseSquareLaw:boolean?,Magnitude:number?,MaxForce:number?,ReactionForceEnabled:boolean?,}
export type LinearVelocity=Constraint&{ForceLimitMode:Enum.ForceLimitMode?,ForceLimitsEnabled:boolean?,LineDirection:Vector3?,LineVelocity:number?,MaxAxesForce:Vector3?,MaxForce:number?,MaxPlanarAxesForce:Vector2?,PlaneVelocity:Vector2?,PrimaryTangentAxis:Vector3?,ReactionForceEnabled:boolean?,RelativeTo:Enum.ActuatorRelativeTo?,SecondaryTangentAxis:Vector3?,VectorVelocity:Vector3?,VelocityConstraintMode:Enum.VelocityConstraintMode?,}
export type PlaneConstraint=Constraint&{}
export type RigidConstraint=Constraint&{}
export type RodConstraint=Constraint&{Length:number?,LimitAngle0:number?,LimitAngle1:number?,LimitsEnabled:boolean?,Thickness:number?,}
export type RopeConstraint=Constraint&{Length:number?,Restitution:number?,Thickness:number?,WinchEnabled:boolean?,WinchForce:number?,WinchResponsiveness:number?,WinchSpeed:number?,WinchTarget:number?,}
export type SlidingBallConstraint=Constraint&{ActuatorType:Enum.ActuatorType?,LimitsEnabled:boolean?,LinearResponsiveness:number?,LowerLimit:number?,MotorMaxAcceleration:number?,MotorMaxForce:number?,Restitution:number?,ServoMaxForce:number?,Size:number?,Speed:number?,TargetPosition:number?,UpperLimit:number?,Velocity:number?,}
export type CylindricalConstraint=SlidingBallConstraint&{AngularActuatorType:Enum.ActuatorType?,AngularLimitsEnabled:boolean?,AngularResponsiveness:number?,AngularRestitution:number?,AngularSpeed:number?,AngularVelocity:number?,InclinationAngle:number?,LowerAngle:number?,MotorMaxAngularAcceleration:number?,MotorMaxTorque:number?,RotationAxisVisible:boolean?,ServoMaxTorque:number?,TargetAngle:number?,UpperAngle:number?,}
export type PrismaticConstraint=SlidingBallConstraint&{}
export type SpringConstraint=Constraint&{Coils:number?,Damping:number?,FreeLength:number?,LimitsEnabled:boolean?,MaxForce:number?,MaxLength:number?,MinLength:number?,Radius:number?,Stiffness:number?,Thickness:number?,}
export type Torque=Constraint&{RelativeTo:Enum.ActuatorRelativeTo?,Torque:Vector3?,}
export type TorsionSpringConstraint=Constraint&{Coils:number?,Damping:number?,LimitsEnabled:boolean?,MaxAngle:number?,MaxTorque:number?,Radius:number?,Restitution:number?,Stiffness:number?,}
export type UniversalConstraint=Constraint&{LimitsEnabled:boolean?,MaxAngle:number?,Radius:number?,Restitution:number?,}
export type VectorForce=Constraint&{ApplyAtCenterOfMass:boolean?,Force:Vector3?,RelativeTo:Enum.ActuatorRelativeTo?,}
export type Controller=Instance&{}
export type HumanoidController=Controller&{}
export type SkateboardController=Controller&{}
export type VehicleController=Controller&{}
export type ControllerBase=Instance&{BalanceRigidityEnabled:boolean?,MoveSpeedFactor:number?,}
export type AirController=ControllerBase&{BalanceMaxTorque:number?,BalanceSpeed:number?,LinearImpulse:Vector3?,MaintainAngularMomentum:boolean?,MaintainLinearMomentum:boolean?,MoveMaxForce:number?,TurnMaxTorque:number?,TurnSpeedFactor:number?,}
export type ClimbController=ControllerBase&{AccelerationTime:number?,BalanceMaxTorque:number?,BalanceSpeed:number?,MoveMaxForce:number?,}
export type GroundController=ControllerBase&{AccelerationLean:number?,AccelerationTime:number?,BalanceMaxTorque:number?,BalanceSpeed:number?,DecelerationTime:number?,Friction:number?,FrictionWeight:number?,GroundOffset:number?,StandForce:number?,StandSpeed:number?,TurnSpeedFactor:number?,}
export type SwimController=ControllerBase&{AccelerationTime:number?,PitchMaxTorque:number?,PitchSpeedFactor:number?,RollMaxTorque:number?,RollSpeedFactor:number?,}
export type ControllerManager=Instance&{ActiveController:ControllerBase?,BaseMoveSpeed:number?,BaseTurnSpeed:number?,ClimbSensor:ControllerSensor?,FacingDirection:Vector3?,GroundSensor:ControllerSensor?,MovingDirection:Vector3?,RootPart:BasePart?,UpDirection:Vector3?,}
export type CustomLog=Instance&{}
export type DataModelMesh=Instance&{Offset:Vector3?,Scale:Vector3?,VertexColor:Vector3?,}
export type BevelMesh=DataModelMesh&{}
export type BlockMesh=BevelMesh&{}
export type FileMesh=DataModelMesh&{MeshId:string?,TextureId:string?,}
export type SpecialMesh=FileMesh&{MeshType:Enum.MeshType?,}
export type DataStoreGetOptions=Instance&{UseCache:boolean?,}
export type DataStoreIncrementOptions=Instance&{}
export type DataStoreOptions=Instance&{AllScopes:boolean?,}
export type DataStoreSetOptions=Instance&{}
export type DebuggerWatch=Instance&{Expression:string?,}
export type Dialog=Instance&{BehaviorType:Enum.DialogBehaviorType?,ConversationDistance:number?,GoodbyeChoiceActive:boolean?,GoodbyeDialog:string?,InUse:boolean?,InitialPrompt:string?,Purpose:Enum.DialogPurpose?,Tone:Enum.DialogTone?,TriggerDistance:number?,TriggerOffset:Vector3?,}
export type DialogChoice=Instance&{GoodbyeChoiceActive:boolean?,GoodbyeDialog:string?,ResponseDialog:string?,UserDialog:string?,}
export type Dragger=Instance&{}
export type EulerRotationCurve=Instance&{RotationOrder:Enum.RotationOrder?,}
export type ExperienceInviteOptions=Instance&{InviteMessageId:string?,InviteUser:number?,LaunchData:string?,PromptMessage:string?,}
export type ExplorerFilter=Instance&{}
export type Explosion=Instance&{BlastPressure:number?,BlastRadius:number?,DestroyJointRadiusPercent:number?,ExplosionType:Enum.ExplosionType?,LocalTransparencyModifier:number?,Position:Vector3?,TimeScale:number?,Visible:boolean?,}
export type FaceControls=Instance&{}
export type FaceInstance=Instance&{Face:Enum.NormalId?,}
export type Decal=FaceInstance&{Color3:Color3?,LocalTransparencyModifier:number?,Texture:string?,TextureContent:string?,Transparency:number?,ZIndex:number?,}
export type Texture=Decal&{OffsetStudsU:number?,OffsetStudsV:number?,StudsPerTileU:number?,StudsPerTileV:number?,}
export type Fire=Instance&{Color:Color3?,Enabled:boolean?,Heat:number?,LocalTransparencyModifier:number?,SecondaryColor:Color3?,Size:number?,TimeScale:number?,}
export type FloatCurve=Instance&{}
export type FlyweightService=Instance&{}
export type CSGDictionaryService=FlyweightService&{}
export type NonReplicatedCSGDictionaryService=FlyweightService&{}
export type Folder=Instance&{}
export type ForceField=Instance&{Visible:boolean?,}
export type GetTextBoundsParams=Instance&{Font:Font?,RichText:boolean?,Size:number?,Text:string?,Width:number?,}
export type GuiBase=Instance&{}
export type GuiBase2d=GuiBase&{AutoLocalize:boolean?,RootLocalizationTable:LocalizationTable?,SelectionBehaviorDown:Enum.SelectionBehavior?,SelectionBehaviorLeft:Enum.SelectionBehavior?,SelectionBehaviorRight:Enum.SelectionBehavior?,SelectionBehaviorUp:Enum.SelectionBehavior?,SelectionGroup:boolean?,}
export type GuiObject=GuiBase2d&{Active:boolean?,AnchorPoint:Vector2?,AutomaticSize:Enum.AutomaticSize?,BackgroundColor3:Color3?,BackgroundTransparency:number?,BorderColor3:Color3?,BorderMode:Enum.BorderMode?,BorderSizePixel:number?,ClipsDescendants:boolean?,Interactable:boolean?,LayoutOrder:number?,NextSelectionDown:GuiObject?,NextSelectionLeft:GuiObject?,NextSelectionRight:GuiObject?,NextSelectionUp:GuiObject?,Position:UDim2?,Rotation:number?,Selectable:boolean?,SelectionImageObject:GuiObject?,SelectionOrder:number?,Size:UDim2?,SizeConstraint:Enum.SizeConstraint?,Transparency:number?,Visible:boolean?,ZIndex:number?,}
export type CanvasGroup=GuiObject&{GroupColor3:Color3?,GroupTransparency:number?,}
export type Frame=GuiObject&{Style:Enum.FrameStyle?,}
export type GuiButton=GuiObject&{AutoButtonColor:boolean?,HoverHapticEffect:HapticEffect?,Modal:boolean?,PressHapticEffect:HapticEffect?,Selected:boolean?,Style:Enum.ButtonStyle?,}
export type ImageButton=GuiButton&{HoverImage:string?,HoverImageContent:string?,Image:string?,ImageColor3:Color3?,ImageContent:string?,ImageRectOffset:Vector2?,ImageRectSize:Vector2?,ImageTransparency:number?,PressedImage:string?,PressedImageContent:string?,ResampleMode:Enum.ResamplerMode?,ScaleType:Enum.ScaleType?,SliceCenter:Rect?,SliceScale:number?,TileSize:UDim2?,}
export type TextButton=GuiButton&{Font:Enum.Font?,FontFace:Font?,LineHeight:number?,MaxVisibleGraphemes:number?,OpenTypeFeatures:string?,RichText:boolean?,Text:string?,TextColor3:Color3?,TextDirection:Enum.TextDirection?,TextScaled:boolean?,TextSize:number?,TextStrokeColor3:Color3?,TextStrokeTransparency:number?,TextTransparency:number?,TextTruncate:Enum.TextTruncate?,TextWrapped:boolean?,TextXAlignment:Enum.TextXAlignment?,TextYAlignment:Enum.TextYAlignment?,}
export type GuiLabel=GuiObject&{}
export type ImageLabel=GuiLabel&{Image:string?,ImageColor3:Color3?,ImageContent:string?,ImageRectOffset:Vector2?,ImageRectSize:Vector2?,ImageTransparency:number?,ResampleMode:Enum.ResamplerMode?,ScaleType:Enum.ScaleType?,SliceCenter:Rect?,SliceScale:number?,TileSize:UDim2?,}
export type TextLabel=GuiLabel&{Font:Enum.Font?,FontFace:Font?,LineHeight:number?,MaxVisibleGraphemes:number?,OpenTypeFeatures:string?,RichText:boolean?,Text:string?,TextColor3:Color3?,TextDirection:Enum.TextDirection?,TextScaled:boolean?,TextSize:number?,TextStrokeColor3:Color3?,TextStrokeTransparency:number?,TextTransparency:number?,TextTruncate:Enum.TextTruncate?,TextWrapped:boolean?,TextXAlignment:Enum.TextXAlignment?,TextYAlignment:Enum.TextYAlignment?,}
export type RelativeGui=GuiObject&{}
export type ScrollingFrame=GuiObject&{AutomaticCanvasSize:Enum.AutomaticSize?,BottomImage:string?,CanvasPosition:Vector2?,CanvasSize:UDim2?,ElasticBehavior:Enum.ElasticBehavior?,HorizontalScrollBarInset:Enum.ScrollBarInset?,MidImage:string?,ScrollBarImageColor3:Color3?,ScrollBarImageTransparency:number?,ScrollBarThickness:number?,ScrollingDirection:Enum.ScrollingDirection?,ScrollingEnabled:boolean?,TopImage:string?,VerticalScrollBarInset:Enum.ScrollBarInset?,VerticalScrollBarPosition:Enum.VerticalScrollBarPosition?,}
export type TextBox=GuiObject&{ClearTextOnFocus:boolean?,CursorPosition:number?,Font:Enum.Font?,FontFace:Font?,LineHeight:number?,MaxVisibleGraphemes:number?,MultiLine:boolean?,OpenTypeFeatures:string?,PlaceholderColor3:Color3?,PlaceholderText:string?,RichText:boolean?,SelectionStart:number?,ShowNativeInput:boolean?,Text:string?,TextColor3:Color3?,TextDirection:Enum.TextDirection?,TextEditable:boolean?,TextScaled:boolean?,TextSize:number?,TextStrokeColor3:Color3?,TextStrokeTransparency:number?,TextTransparency:number?,TextTruncate:Enum.TextTruncate?,TextWrapped:boolean?,TextXAlignment:Enum.TextXAlignment?,TextYAlignment:Enum.TextYAlignment?,}
export type VideoDisplay=GuiObject&{ResampleMode:Enum.ResamplerMode?,ScaleType:Enum.ScaleType?,TileSize:UDim2?,VideoColor3:Color3?,VideoRectOffset:Vector2?,VideoRectSize:Vector2?,VideoTransparency:number?,}
export type VideoFrame=GuiObject&{Looped:boolean?,Playing:boolean?,TimePosition:number?,Video:string?,Volume:number?,}
export type ViewportFrame=GuiObject&{Ambient:Color3?,CurrentCamera:Camera?,ImageColor3:Color3?,ImageTransparency:number?,LightColor:Color3?,LightDirection:Vector3?,}
export type LayerCollector=GuiBase2d&{Enabled:boolean?,ResetOnSpawn:boolean?,ZIndexBehavior:Enum.ZIndexBehavior?,}
export type BillboardGui=LayerCollector&{Active:boolean?,Adornee:Instance?,AlwaysOnTop:boolean?,Brightness:number?,ClipsDescendants:boolean?,DistanceLowerLimit:number?,DistanceStep:number?,DistanceUpperLimit:number?,ExtentsOffset:Vector3?,ExtentsOffsetWorldSpace:Vector3?,LightInfluence:number?,MaxDistance:number?,PlayerToHideFrom:Instance?,Size:UDim2?,SizeOffset:Vector2?,StudsOffset:Vector3?,StudsOffsetWorldSpace:Vector3?,}
export type ScreenGui=LayerCollector&{ClipToDeviceSafeArea:boolean?,DisplayOrder:number?,IgnoreGuiInset:boolean?,SafeAreaCompatibility:Enum.SafeAreaCompatibility?,ScreenInsets:Enum.ScreenInsets?,}
export type SurfaceGuiBase=LayerCollector&{Active:boolean?,Adornee:Instance?,Face:Enum.NormalId?,}
export type AdGui=SurfaceGuiBase&{AdShape:Enum.AdShape?,EnableVideoAds:boolean?,FallbackImage:string?,}
export type SurfaceGui=SurfaceGuiBase&{AlwaysOnTop:boolean?,Brightness:number?,CanvasSize:Vector2?,ClipsDescendants:boolean?,LightInfluence:number?,MaxDistance:number?,PixelsPerStud:number?,SizingMode:Enum.SurfaceGuiSizingMode?,ToolPunchThroughDistance:number?,ZOffset:number?,}
export type GuiBase3d=GuiBase&{Color3:Color3?,Transparency:number?,Visible:boolean?,}
export type InstanceAdornment=GuiBase3d&{Adornee:Instance?,}
export type SelectionBox=InstanceAdornment&{LineThickness:number?,SurfaceColor3:Color3?,SurfaceTransparency:number?,}
export type PVAdornment=GuiBase3d&{Adornee:PVInstance?,}
export type HandleAdornment=PVAdornment&{AdornCullingMode:Enum.AdornCullingMode?,AlwaysOnTop:boolean?,CFrame:CFrame?,SizeRelativeOffset:Vector3?,ZIndex:number?,}
export type BoxHandleAdornment=HandleAdornment&{Size:Vector3?,}
export type ConeHandleAdornment=HandleAdornment&{Height:number?,Radius:number?,}
export type CylinderHandleAdornment=HandleAdornment&{Angle:number?,Height:number?,InnerRadius:number?,Radius:number?,}
export type ImageHandleAdornment=HandleAdornment&{Image:string?,Size:Vector2?,}
export type LineHandleAdornment=HandleAdornment&{Length:number?,Thickness:number?,}
export type SphereHandleAdornment=HandleAdornment&{Radius:number?,}
export type WireframeHandleAdornment=HandleAdornment&{Scale:Vector3?,Thickness:number?,}
export type ParabolaAdornment=PVAdornment&{}
export type SelectionSphere=PVAdornment&{SurfaceColor3:Color3?,SurfaceTransparency:number?,}
export type PartAdornment=GuiBase3d&{Adornee:BasePart?,}
export type HandlesBase=PartAdornment&{}
export type ArcHandles=HandlesBase&{Axes:Axes?,}
export type Handles=HandlesBase&{Faces:Faces?,Style:Enum.HandlesStyle?,}
export type SurfaceSelection=PartAdornment&{TargetSurface:Enum.NormalId?,}
export type Path2D=GuiBase&{Closed:boolean?,Color3:Color3?,Thickness:number?,Visible:boolean?,ZIndex:number?,}
export type HapticEffect=Instance&{Looped:boolean?,Position:Vector3?,Radius:number?,Type:Enum.HapticEffectType?,}
export type HeightmapImporterService=Instance&{}
export type HiddenSurfaceRemovalAsset=Instance&{}
export type Highlight=Instance&{Adornee:Instance?,DepthMode:Enum.HighlightDepthMode?,Enabled:boolean?,FillColor:Color3?,FillTransparency:number?,OutlineColor:Color3?,OutlineTransparency:number?,}
export type Humanoid=Instance&{AutoJumpEnabled:boolean?,AutoRotate:boolean?,AutomaticScalingEnabled:boolean?,BreakJointsOnDeath:boolean?,CameraOffset:Vector3?,DisplayDistanceType:Enum.HumanoidDisplayDistanceType?,DisplayName:string?,EvaluateStateMachine:boolean?,Health:number?,HealthDisplayDistance:number?,HealthDisplayType:Enum.HumanoidHealthDisplayType?,HipHeight:number?,Jump:boolean?,JumpHeight:number?,JumpPower:number?,MaxHealth:number?,MaxSlopeAngle:number?,NameDisplayDistance:number?,NameOcclusion:Enum.NameOcclusion?,PlatformStand:boolean?,RequiresNeck:boolean?,RigType:Enum.HumanoidRigType?,Sit:boolean?,TargetPoint:Vector3?,UseJumpPower:boolean?,WalkSpeed:number?,WalkToPart:BasePart?,WalkToPoint:Vector3?,}
export type HumanoidDescription=Instance&{BackAccessory:string?,BodyTypeScale:number?,ClimbAnimation:number?,DepthScale:number?,Face:number?,FaceAccessory:string?,FallAnimation:number?,FrontAccessory:string?,GraphicTShirt:number?,HairAccessory:string?,HatAccessory:string?,Head:number?,HeadColor:Color3?,HeadScale:number?,HeightScale:number?,IdleAnimation:number?,JumpAnimation:number?,LeftArm:number?,LeftArmColor:Color3?,LeftLeg:number?,LeftLegColor:Color3?,MoodAnimation:number?,NeckAccessory:string?,Pants:number?,ProportionScale:number?,RightArm:number?,RightArmColor:Color3?,RightLeg:number?,RightLegColor:Color3?,RunAnimation:number?,Shirt:number?,ShouldersAccessory:string?,SwimAnimation:number?,Torso:number?,TorsoColor:Color3?,WaistAccessory:string?,WalkAnimation:number?,WidthScale:number?,}
export type HumanoidRigDescription=Instance&{Chest:Instance?,ChestRangeMax:Vector3?,ChestRangeMin:Vector3?,ChestSize:number?,ChestTposeAdjustment:CFrame?,Head:Instance?,HeadRangeMax:Vector3?,HeadRangeMin:Vector3?,HeadSize:number?,HeadTposeAdjustment:CFrame?,LeftAnkle:Instance?,LeftAnkleRangeMax:Vector3?,LeftAnkleRangeMin:Vector3?,LeftAnkleSize:number?,LeftAnkleTposeAdjustment:CFrame?,LeftClavicle:Instance?,LeftClavicleRangeMax:Vector3?,LeftClavicleRangeMin:Vector3?,LeftClavicleSize:number?,LeftClavicleTposeAdjustment:CFrame?,LeftElbow:Instance?,LeftElbowRangeMax:Vector3?,LeftElbowRangeMin:Vector3?,LeftElbowSize:number?,LeftElbowTposeAdjustment:CFrame?,LeftHip:Instance?,LeftHipRangeMax:Vector3?,LeftHipRangeMin:Vector3?,LeftHipSize:number?,LeftHipTposeAdjustment:CFrame?,LeftKnee:Instance?,LeftKneeRangeMax:Vector3?,LeftKneeRangeMin:Vector3?,LeftKneeSize:number?,LeftKneeTposeAdjustment:CFrame?,LeftShoulder:Instance?,LeftShoulderRangeMax:Vector3?,LeftShoulderRangeMin:Vector3?,LeftShoulderSize:number?,LeftShoulderTposeAdjustment:CFrame?,LeftToes:Instance?,LeftToesRangeMax:Vector3?,LeftToesRangeMin:Vector3?,LeftToesSize:number?,LeftToesTposeAdjustment:CFrame?,LeftWrist:Instance?,LeftWristRangeMax:Vector3?,LeftWristRangeMin:Vector3?,LeftWristSize:number?,LeftWristTposeAdjustment:CFrame?,Neck:Instance?,NeckRangeMax:Vector3?,NeckRangeMin:Vector3?,NeckSize:number?,NeckTposeAdjustment:CFrame?,Pelvis:Instance?,PelvisRangeMax:Vector3?,PelvisRangeMin:Vector3?,PelvisSize:number?,PelvisTposeAdjustment:CFrame?,RightAnkle:Instance?,RightAnkleRangeMax:Vector3?,RightAnkleRangeMin:Vector3?,RightAnkleSize:number?,RightAnkleTposeAdjustment:CFrame?,RightClavicle:Instance?,RightClavicleRangeMax:Vector3?,RightClavicleRangeMin:Vector3?,RightClavicleSize:number?,RightClavicleTposeAdjustment:CFrame?,RightElbow:Instance?,RightElbowRangeMax:Vector3?,RightElbowRangeMin:Vector3?,RightElbowSize:number?,RightElbowTposeAdjustment:CFrame?,RightHip:Instance?,RightHipRangeMax:Vector3?,RightHipRangeMin:Vector3?,RightHipSize:number?,RightHipTposeAdjustment:CFrame?,RightKnee:Instance?,RightKneeRangeMax:Vector3?,RightKneeRangeMin:Vector3?,RightKneeSize:number?,RightKneeTposeAdjustment:CFrame?,RightShoulder:Instance?,RightShoulderRangeMax:Vector3?,RightShoulderRangeMin:Vector3?,RightShoulderSize:number?,RightShoulderTposeAdjustment:CFrame?,RightToes:Instance?,RightToesRangeMax:Vector3?,RightToesRangeMin:Vector3?,RightToesSize:number?,RightToesTposeAdjustment:CFrame?,RightWrist:Instance?,RightWristRangeMax:Vector3?,RightWristRangeMin:Vector3?,RightWristSize:number?,RightWristTposeAdjustment:CFrame?,Root:Instance?,RootRangeMax:Vector3?,RootRangeMin:Vector3?,RootSize:number?,RootTposeAdjustment:CFrame?,Waist:Instance?,WaistRangeMax:Vector3?,WaistRangeMin:Vector3?,WaistSize:number?,WaistTposeAdjustment:CFrame?,}
export type IKControl=Instance&{ChainRoot:Instance?,Enabled:boolean?,EndEffector:Instance?,EndEffectorOffset:CFrame?,Offset:CFrame?,Pole:Instance?,Priority:number?,SmoothTime:number?,Target:Instance?,Type:Enum.IKControlType?,Weight:number?,}
export type InputAction=Instance&{Enabled:boolean?,Type:Enum.InputActionType?,}
export type InputBinding=Instance&{Down:Enum.KeyCode?,KeyCode:Enum.KeyCode?,Left:Enum.KeyCode?,PressedThreshold:number?,ReleasedThreshold:number?,Right:Enum.KeyCode?,Scale:number?,UIButton:GuiButton?,Up:Enum.KeyCode?,Vector2Scale:Vector2?,}
export type InputContext=Instance&{Enabled:boolean?,Priority:number?,Sink:boolean?,}
export type JointInstance=Instance&{C0:CFrame?,C1:CFrame?,Enabled:boolean?,Part0:BasePart?,Part1:BasePart?,}
export type Motor=JointInstance&{CurrentAngle:number?,DesiredAngle:number?,MaxVelocity:number?,}
export type Motor6D=Motor&{Transform:CFrame?,}
export type VelocityMotor=JointInstance&{CurrentAngle:number?,DesiredAngle:number?,Hole:Hole?,MaxVelocity:number?,}
export type Weld=JointInstance&{}
export type Keyframe=Instance&{Time:number?,}
export type KeyframeMarker=Instance&{Value:string?,}
export type Light=Instance&{Brightness:number?,Color:Color3?,Enabled:boolean?,Shadows:boolean?,}
export type PointLight=Light&{Range:number?,}
export type SpotLight=Light&{Angle:number?,Face:Enum.NormalId?,Range:number?,}
export type SurfaceLight=Light&{Angle:number?,Face:Enum.NormalId?,Range:number?,}
export type Lighting=Instance&{Ambient:Color3?,Brightness:number?,ClockTime:number?,ColorShift_Bottom:Color3?,ColorShift_Top:Color3?,EnvironmentDiffuseScale:number?,EnvironmentSpecularScale:number?,ExposureCompensation:number?,FogColor:Color3?,FogEnd:number?,FogStart:number?,GeographicLatitude:number?,GlobalShadows:boolean?,OutdoorAmbient:Color3?,ShadowSoftness:number?,TimeOfDay:string?,}
export type LocalizationTable=Instance&{SourceLocaleId:string?,}
export type LuaSourceContainer=Instance&{}
export type BaseScript=LuaSourceContainer&{Disabled:boolean?,Enabled:boolean?,}
export type Script=BaseScript&{Source:string?,}
export type LocalScript=Script&{}
export type ModuleScript=LuaSourceContainer&{Source:string?,}
export type MarkerCurve=Instance&{}
export type MaterialVariant=Instance&{CustomPhysicalProperties:PhysicalProperties?,MaterialPattern:Enum.MaterialPattern?,StudsPerTile:number?,}
export type MemoryStoreService=Instance&{}
export type NoCollisionConstraint=Instance&{Enabled:boolean?,Part0:BasePart?,Part1:BasePart?,}
export type Noise=Instance&{}
export type OperationGraph=Instance&{}
export type PVInstance=Instance&{}
export type BasePart=PVInstance&{Anchored:boolean?,AssemblyAngularVelocity:Vector3?,AssemblyLinearVelocity:Vector3?,AudioCanCollide:boolean?,BackSurface:Enum.SurfaceType?,BottomSurface:Enum.SurfaceType?,BrickColor:BrickColor?,CFrame:CFrame?,CanCollide:boolean?,CanQuery:boolean?,CanTouch:boolean?,CastShadow:boolean?,CollisionGroup:string?,Color:Color3?,CustomPhysicalProperties:PhysicalProperties?,EnableFluidForces:boolean?,FrontSurface:Enum.SurfaceType?,LeftSurface:Enum.SurfaceType?,LocalTransparencyModifier:number?,Locked:boolean?,Massless:boolean?,Material:Enum.Material?,MaterialVariant:string?,Orientation:Vector3?,PivotOffset:CFrame?,Position:Vector3?,Reflectance:number?,RightSurface:Enum.SurfaceType?,RootPriority:number?,Rotation:Vector3?,Size:Vector3?,TopSurface:Enum.SurfaceType?,Transparency:number?,}
export type CornerWedgePart=BasePart&{}
export type FormFactorPart=BasePart&{}
export type Part=FormFactorPart&{Shape:Enum.PartType?,}
export type Seat=Part&{Disabled:boolean?,}
export type SpawnLocation=Part&{AllowTeamChangeOnTouch:boolean?,Duration:number?,Enabled:boolean?,Neutral:boolean?,TeamColor:BrickColor?,}
export type WedgePart=FormFactorPart&{}
export type TriangleMeshPart=BasePart&{}
export type MeshPart=TriangleMeshPart&{TextureContent:string?,TextureID:string?,}
export type PartOperation=TriangleMeshPart&{UsePartColor:boolean?,}
export type IntersectOperation=PartOperation&{}
export type NegateOperation=PartOperation&{}
export type UnionOperation=PartOperation&{}
export type TrussPart=BasePart&{Style:Enum.Style?,}
export type VehicleSeat=BasePart&{Disabled:boolean?,HeadsUpDisplay:boolean?,MaxSpeed:number?,Steer:number?,SteerFloat:number?,Throttle:number?,ThrottleFloat:number?,Torque:number?,TurnSpeed:number?,}
export type Camera=PVInstance&{CFrame:CFrame?,CameraSubject:Instance?,CameraType:Enum.CameraType?,DiagonalFieldOfView:number?,FieldOfView:number?,FieldOfViewMode:Enum.FieldOfViewMode?,Focus:CFrame?,HeadLocked:boolean?,HeadScale:number?,MaxAxisFieldOfView:number?,VRTiltAndRollEnabled:boolean?,}
export type Model=PVInstance&{ModelStreamingMode:Enum.ModelStreamingMode?,PrimaryPart:BasePart?,WorldPivot:CFrame?,}
export type Actor=Model&{}
export type BackpackItem=Model&{TextureId:string?,}
export type Tool=BackpackItem&{CanBeDropped:boolean?,Enabled:boolean?,Grip:CFrame?,GripForward:Vector3?,GripPos:Vector3?,GripRight:Vector3?,GripUp:Vector3?,ManualActivationOnly:boolean?,RequiresHandle:boolean?,ToolTip:string?,}
export type WorldRoot=Model&{}
export type WorldModel=WorldRoot&{}
export type PartOperationAsset=Instance&{}
export type ParticleEmitter=Instance&{Acceleration:Vector3?,Brightness:number?,Color:ColorSequence?,Drag:number?,EmissionDirection:Enum.NormalId?,Enabled:boolean?,FlipbookFramerate:NumberRange?,FlipbookIncompatible:string?,FlipbookLayout:Enum.ParticleFlipbookLayout?,FlipbookMode:Enum.ParticleFlipbookMode?,FlipbookStartRandom:boolean?,Lifetime:NumberRange?,LightEmission:number?,LightInfluence:number?,LocalTransparencyModifier:number?,LockedToPart:boolean?,Orientation:Enum.ParticleOrientation?,Rate:number?,RotSpeed:NumberRange?,Rotation:NumberRange?,Shape:Enum.ParticleEmitterShape?,ShapeInOut:Enum.ParticleEmitterShapeInOut?,ShapePartial:number?,ShapeStyle:Enum.ParticleEmitterShapeStyle?,Size:NumberSequence?,Speed:NumberRange?,SpreadAngle:Vector2?,Squash:NumberSequence?,Texture:string?,TimeScale:number?,Transparency:NumberSequence?,VelocityInheritance:number?,WindAffectsDrag:boolean?,ZOffset:number?,}
export type PathfindingLink=Instance&{Attachment0:Attachment?,Attachment1:Attachment?,IsBidirectional:boolean?,Label:string?,}
export type PathfindingModifier=Instance&{Label:string?,PassThrough:boolean?,}
export type Player=Instance&{AutoJumpEnabled:boolean?,CameraMaxZoomDistance:number?,CameraMinZoomDistance:number?,CameraMode:Enum.CameraMode?,CanLoadCharacterAppearance:boolean?,Character:Model?,CharacterAppearanceId:number?,DevCameraOcclusionMode:Enum.DevCameraOcclusionMode?,DevComputerCameraMode:Enum.DevComputerCameraMovementMode?,DevComputerMovementMode:Enum.DevComputerMovementMode?,DevEnableMouseLock:boolean?,DevTouchCameraMode:Enum.DevTouchCameraMovementMode?,DevTouchMovementMode:Enum.DevTouchMovementMode?,DisplayName:string?,HasVerifiedBadge:boolean?,HealthDisplayDistance:number?,NameDisplayDistance:number?,Neutral:boolean?,ReplicationFocus:Instance?,RespawnLocation:SpawnLocation?,Team:Team?,TeamColor:BrickColor?,UserId:number?,}
export type PluginAction=Instance&{}
export type PluginCapabilities=Instance&{}
export type PoseBase=Instance&{EasingDirection:Enum.PoseEasingDirection?,EasingStyle:Enum.PoseEasingStyle?,Weight:number?,}
export type NumberPose=PoseBase&{Value:number?,}
export type Pose=PoseBase&{CFrame:CFrame?,}
export type PostEffect=Instance&{Enabled:boolean?,}
export type BloomEffect=PostEffect&{Intensity:number?,Size:number?,Threshold:number?,}
export type BlurEffect=PostEffect&{Size:number?,}
export type ColorCorrectionEffect=PostEffect&{Brightness:number?,Contrast:number?,Saturation:number?,TintColor:Color3?,}
export type ColorGradingEffect=PostEffect&{TonemapperPreset:Enum.TonemapperPreset?,}
export type DepthOfFieldEffect=PostEffect&{FarIntensity:number?,FocusDistance:number?,InFocusRadius:number?,NearIntensity:number?,}
export type SunRaysEffect=PostEffect&{Intensity:number?,Spread:number?,}
export type ProximityPrompt=Instance&{ActionText:string?,AutoLocalize:boolean?,ClickablePrompt:boolean?,Enabled:boolean?,Exclusivity:Enum.ProximityPromptExclusivity?,GamepadKeyCode:Enum.KeyCode?,HoldDuration:number?,KeyboardKeyCode:Enum.KeyCode?,MaxActivationDistance:number?,ObjectText:string?,RequiresLineOfSight:boolean?,RootLocalizationTable:LocalizationTable?,Style:Enum.ProximityPromptStyle?,UIOffset:Vector2?,}
export type ProximityPromptService=Instance&{Enabled:boolean?,MaxPromptsVisible:number?,}
export type RTAnimationTracker=Instance&{Active:boolean?,EnableFallbackAudioInput:boolean?,SessionName:string?,TrackerType:Enum.TrackerType?,}
export type ReflectionMetadata=Instance&{}
export type ReflectionMetadataCallbacks=Instance&{}
export type ReflectionMetadataClasses=Instance&{}
export type ReflectionMetadataEnums=Instance&{}
export type ReflectionMetadataEvents=Instance&{}
export type ReflectionMetadataFunctions=Instance&{}
export type ReflectionMetadataItem=Instance&{Browsable:boolean?,ClassCategory:string?,ClientOnly:boolean?,Constraint:string?,Deprecated:boolean?,EditingDisabled:boolean?,EditorType:string?,FFlag:string?,IsBackend:boolean?,PropertyOrder:number?,ScriptContext:string?,ServerOnly:boolean?,SliderScaling:string?,UIMaximum:number?,UIMinimum:number?,UINumTicks:number?,}
export type ReflectionMetadataClass=ReflectionMetadataItem&{ExplorerImageIndex:number?,ExplorerOrder:number?,Insertable:boolean?,PreferredParent:string?,}
export type ReflectionMetadataEnum=ReflectionMetadataItem&{}
export type ReflectionMetadataEnumItem=ReflectionMetadataItem&{}
export type ReflectionMetadataMember=ReflectionMetadataItem&{}
export type ReflectionMetadataProperties=Instance&{}
export type ReflectionMetadataYieldFunctions=Instance&{}
export type RemoteFunction=Instance&{}
export type RenderingTest=Instance&{CFrame:CFrame?,ComparisonDiffThreshold:number?,ComparisonMethod:Enum.RenderingTestComparisonMethod?,ComparisonPsnrThreshold:number?,Description:string?,FieldOfView:number?,Orientation:Vector3?,PerfTest:boolean?,Position:Vector3?,QualityAuto:boolean?,QualityLevel:number?,RenderingTestFrameCount:number?,ShouldSkip:boolean?,Ticket:string?,Timeout:number?,}
export type RotationCurve=Instance&{}
export type SensorBase=Instance&{UpdateType:Enum.SensorUpdateType?,}
export type AtmosphereSensor=SensorBase&{}
export type BuoyancySensor=SensorBase&{FullySubmerged:boolean?,TouchingSurface:boolean?,}
export type ControllerSensor=SensorBase&{}
export type ControllerPartSensor=ControllerSensor&{HitFrame:CFrame?,HitNormal:Vector3?,SearchDistance:number?,SensedPart:BasePart?,SensorMode:Enum.SensorMode?,}
export type FluidForceSensor=SensorBase&{}
export type Sky=Instance&{CelestialBodiesShown:boolean?,MoonAngularSize:number?,MoonTextureId:string?,SkyboxBk:string?,SkyboxDn:string?,SkyboxFt:string?,SkyboxLf:string?,SkyboxOrientation:Vector3?,SkyboxRt:string?,SkyboxUp:string?,StarCount:number?,SunAngularSize:number?,SunTextureId:string?,}
export type Smoke=Instance&{Color:Color3?,Enabled:boolean?,LocalTransparencyModifier:number?,Opacity:number?,RiseVelocity:number?,Size:number?,TimeScale:number?,}
export type Sound=Instance&{LoopRegion:NumberRange?,Looped:boolean?,PlayOnRemove:boolean?,PlaybackRegion:NumberRange?,PlaybackRegionsEnabled:boolean?,PlaybackSpeed:number?,Playing:boolean?,RollOffMaxDistance:number?,RollOffMinDistance:number?,RollOffMode:Enum.RollOffMode?,SoundGroup:SoundGroup?,SoundId:string?,TimePosition:number?,Volume:number?,}
export type SoundEffect=Instance&{Enabled:boolean?,Priority:number?,}
export type ChorusSoundEffect=SoundEffect&{Depth:number?,Mix:number?,Rate:number?,}
export type CompressorSoundEffect=SoundEffect&{Attack:number?,GainMakeup:number?,Ratio:number?,Release:number?,SideChain:Instance?,Threshold:number?,}
export type DistortionSoundEffect=SoundEffect&{Level:number?,}
export type EchoSoundEffect=SoundEffect&{Delay:number?,DryLevel:number?,Feedback:number?,WetLevel:number?,}
export type EqualizerSoundEffect=SoundEffect&{HighGain:number?,LowGain:number?,MidGain:number?,}
export type FlangeSoundEffect=SoundEffect&{Depth:number?,Mix:number?,Rate:number?,}
export type PitchShiftSoundEffect=SoundEffect&{Octave:number?,}
export type ReverbSoundEffect=SoundEffect&{DecayTime:number?,Density:number?,Diffusion:number?,DryLevel:number?,WetLevel:number?,}
export type TremoloSoundEffect=SoundEffect&{Depth:number?,Duty:number?,Frequency:number?,}
export type SoundGroup=Instance&{Volume:number?,}
export type Sparkles=Instance&{Color:Color3?,Enabled:boolean?,LocalTransparencyModifier:number?,SparkleColor:Color3?,TimeScale:number?,}
export type StandalonePluginScripts=Instance&{}
export type StarterGear=Instance&{}
export type StudioAttachment=Instance&{AutoHideParent:boolean?,IsArrowVisible:boolean?,Offset:Vector2?,SourceAnchorPoint:Vector2?,TargetAnchorPoint:Vector2?,}
export type StudioCallout=Instance&{}
export type StyleBase=Instance&{}
export type StyleRule=StyleBase&{Priority:number?,Selector:string?,}
export type StyleSheet=StyleBase&{}
export type StyleDerive=Instance&{Priority:number?,StyleSheet:StyleSheet?,}
export type StyleLink=Instance&{StyleSheet:StyleSheet?,}
export type SurfaceAppearance=Instance&{Color:Color3?,}
export type Team=Instance&{AutoAssignable:boolean?,TeamColor:BrickColor?,}
export type TeleportOptions=Instance&{ReservedServerAccessCode:string?,ServerInstanceId:string?,ShouldReserveServer:boolean?,}
export type TerrainDetail=Instance&{Face:Enum.TerrainFace?,MaterialPattern:Enum.MaterialPattern?,StudsPerTile:number?,}
export type TerrainRegion=Instance&{}
export type TestService=Instance&{AutoRuns:boolean?,Description:string?,ExecuteWithStudioRun:boolean?,IsPhysicsEnvironmentalThrottled:boolean?,IsSleepAllowed:boolean?,NumberOfPlayers:number?,SimulateSecondsLag:number?,ThrottlePhysicsToRealtime:boolean?,Timeout:number?,}
export type TextChannel=Instance&{}
export type TextChatCommand=Instance&{AutocompleteVisible:boolean?,Enabled:boolean?,PrimaryAlias:string?,SecondaryAlias:string?,}
export type TextChatMessageProperties=Instance&{PrefixText:string?,Text:string?,Translation:string?,}
export type BubbleChatMessageProperties=TextChatMessageProperties&{BackgroundColor3:Color3?,BackgroundTransparency:number?,FontFace:Font?,TailVisible:boolean?,TextColor3:Color3?,TextSize:number?,}
export type TrackerStreamAnimation=Instance&{}
export type Trail=Instance&{Attachment0:Attachment?,Attachment1:Attachment?,Brightness:number?,Color:ColorSequence?,Enabled:boolean?,FaceCamera:boolean?,Lifetime:number?,LightEmission:number?,LightInfluence:number?,LocalTransparencyModifier:number?,MaxLength:number?,MinLength:number?,Texture:string?,TextureLength:number?,TextureMode:Enum.TextureMode?,Transparency:NumberSequence?,WidthScale:NumberSequence?,}
export type TweenBase=Instance&{}
export type Tween=TweenBase&{}
export type UIBase=Instance&{}
export type UIComponent=UIBase&{}
export type UIConstraint=UIComponent&{}
export type UIAspectRatioConstraint=UIConstraint&{AspectRatio:number?,AspectType:Enum.AspectType?,DominantAxis:Enum.DominantAxis?,}
export type UISizeConstraint=UIConstraint&{MaxSize:Vector2?,MinSize:Vector2?,}
export type UITextSizeConstraint=UIConstraint&{MaxTextSize:number?,MinTextSize:number?,}
export type UICorner=UIComponent&{CornerRadius:UDim?,}
export type UIDragDetector=UIComponent&{ActivatedCursorIcon:string?,BoundingBehavior:Enum.UIDragDetectorBoundingBehavior?,BoundingUI:GuiBase2d?,CursorIcon:string?,DragAxis:Vector2?,DragRelativity:Enum.UIDragDetectorDragRelativity?,DragRotation:number?,DragSpace:Enum.UIDragDetectorDragSpace?,DragStyle:Enum.UIDragDetectorDragStyle?,DragUDim2:UDim2?,Enabled:boolean?,MaxDragAngle:number?,MaxDragTranslation:UDim2?,MinDragAngle:number?,MinDragTranslation:UDim2?,ReferenceUIInstance:GuiObject?,ResponseStyle:Enum.UIDragDetectorResponseStyle?,SelectionModeDragSpeed:UDim2?,SelectionModeRotateSpeed:number?,UIDragSpeedAxisMapping:Enum.UIDragSpeedAxisMapping?,}
export type UIFlexItem=UIComponent&{FlexMode:Enum.UIFlexMode?,GrowRatio:number?,ItemLineAlignment:Enum.ItemLineAlignment?,ShrinkRatio:number?,}
export type UIGradient=UIComponent&{Color:ColorSequence?,Enabled:boolean?,Offset:Vector2?,Rotation:number?,Transparency:NumberSequence?,}
export type UILayout=UIComponent&{}
export type UIGridStyleLayout=UILayout&{FillDirection:Enum.FillDirection?,HorizontalAlignment:Enum.HorizontalAlignment?,SortOrder:Enum.SortOrder?,VerticalAlignment:Enum.VerticalAlignment?,}
export type UIGridLayout=UIGridStyleLayout&{CellPadding:UDim2?,CellSize:UDim2?,FillDirectionMaxCells:number?,StartCorner:Enum.StartCorner?,}
export type UIListLayout=UIGridStyleLayout&{HorizontalFlex:Enum.UIFlexAlignment?,ItemLineAlignment:Enum.ItemLineAlignment?,Padding:UDim?,VerticalFlex:Enum.UIFlexAlignment?,Wraps:boolean?,}
export type UIPageLayout=UIGridStyleLayout&{Animated:boolean?,Circular:boolean?,EasingDirection:Enum.EasingDirection?,EasingStyle:Enum.EasingStyle?,GamepadInputEnabled:boolean?,Padding:UDim?,ScrollWheelInputEnabled:boolean?,TouchInputEnabled:boolean?,TweenTime:number?,}
export type UITableLayout=UIGridStyleLayout&{FillEmptySpaceColumns:boolean?,FillEmptySpaceRows:boolean?,MajorAxis:Enum.TableMajorAxis?,Padding:UDim2?,}
export type UIPadding=UIComponent&{PaddingBottom:UDim?,PaddingLeft:UDim?,PaddingRight:UDim?,PaddingTop:UDim?,}
export type UIScale=UIComponent&{Scale:number?,}
export type UIStroke=UIComponent&{ApplyStrokeMode:Enum.ApplyStrokeMode?,Color:Color3?,Enabled:boolean?,LineJoinMode:Enum.LineJoinMode?,Thickness:number?,Transparency:number?,}
export type ValueBase=Instance&{}
export type BinaryStringValue=ValueBase&{}
export type BoolValue=ValueBase&{Value:boolean?,}
export type BrickColorValue=ValueBase&{Value:BrickColor?,}
export type CFrameValue=ValueBase&{Value:CFrame?,}
export type Color3Value=ValueBase&{Value:Color3?,}
export type IntValue=ValueBase&{Value:number?,}
export type NumberValue=ValueBase&{Value:number?,}
export type ObjectValue=ValueBase&{Value:Instance?,}
export type RayValue=ValueBase&{Value:Ray?,}
export type StringValue=ValueBase&{Value:string?,}
export type Vector3Value=ValueBase&{Value:Vector3?,}
export type Vector3Curve=Instance&{}
export type VideoDeviceInput=Instance&{Active:boolean?,CameraId:string?,CaptureQuality:Enum.VideoDeviceCaptureQuality?,}
export type VideoPlayer=Instance&{Asset:string?,Looping:boolean?,PlaybackSpeed:number?,TimePosition:number?,Volume:number?,}
export type VirtualInputManager=Instance&{}
export type VisualizationMode=Instance&{}
export type VisualizationModeCategory=Instance&{}
export type WeldConstraint=Instance&{Enabled:boolean?,Part0:BasePart?,Part1:BasePart?,}
export type Wire=Instance&{SourceInstance:Instance?,SourceName:string?,TargetInstance:Instance?,TargetName:string?,}


return nil